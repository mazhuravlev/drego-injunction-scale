{"version":3,"sources":["data.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["dataEn","injunctionsEn","answerNumbers","Array","map","_","i","App","useState","currentQuestionIndex","setCurrentQuestionIndex","answers","useRef","Map","result","setResult","questions","injunctions","onAnswer","answer","current","set","length","idxs","r","x","name","score","get","reduce","sum","mean","stdev","Math","sqrt","pow","threshold","type","calculateResult","undefined","maxScore","max","className","Fragment","key","colSpan","style","width","backgroundColor","onClick","a","b","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63de2a4d.chunk.js","sourcesContent":["export const dataEn =\n[\n    \"I feel I am a burden to others.\",\n    \"I am unhappy to be born a man.\",\n    \"Having fun like a child is beneath my dignity.\",\n    \"I prefer that others decide for me.\",\n    \"I make mistakes.\",\n    \"I am less important than others.\",\n    \"Deep down I long to be loved.\",\n    \"I feel as though I am an outsider.\",\n    \"I feel sick.\",\n    \"Fm scared that my problems will drive me crazy.\",\n    \"I get confused.\",\n    \"Fm uncomfortable when others express feelings.\",\n    \"I wish I had not been born.\",\n    \"If I were female life would be easier.\",\n    \"I look after others even at cost to myself.\",\n    \"I feel a need for approval.\",\n    \"I can't achieve what I want to.\",\n    \"I don’t like being a leader.\",\n    \"I don’t trust others.\",\n    \"I feel that others don’t accept me.\",\n    \"I rest only when I am sick.\",\n    \"I feel that people are against me.\",\n    \"I’m slow in learning.\",\n    \"It is weak to be emotional.\",\n    \"I don’t take care of myself.\",\n    \"Expectations on me as a man are heavy.\",\n    \"I don’t ask for what I want.\",\n    \"I don’t like taking responsibility.\",\n    \"I put in a lot of effort and get little reward.\",\n    \"I don't disturb others when I need help.\",\n    \"Those whom I love go far away.\",\n    \"My family members don’t think of me as part of them.\",\n    \"I spend time talking about illness.\",\n    \"I think life doesn't make sense.\",\n    \"I feel unintelligent.\",\n    \"I feel bad about being angry.\",\n    \"I get into accidents or crises.\",\n    \"I wish I was somebody else.\",\n    \"If I take something from others, I feel obliged.\",\n    \"I am treated as if I were a child.\",\n    \"I find it difficult to finish what I begin.\",\n    \"I prefer to stay silent than to speak up.\",\n    \"I hold back from expressing love and affection.\",\n    \"Iam different from my family members.\",\n    \"I get worried about being ill.\",\n    \"I fear I might go crazy.\",\n    \"I am forgetful.\",\n    \"I hide my feelings.\",\n    \"Others will realize my worth only when I’m dead.\",\n    \"As a man I feel superior.\",\n    \"I don't like childishness in myself.\",\n    \"I can’t do without protection from others.\",\n    \"Even after being successful, I feel dissatisfied.\",\n    \"I let others get their needs met first.\",\n    \"I’m uncomfortable touching, or being touched.\",\n    \"I prefer to observe a group rather than to take part.\",\n    \"When new things happen I feel ill.\",\n    \"If things get bad, I may fall apart.\",\n    \"Thinking is a burden for me.\",\n    \"I don't have feelings.\"\n ];\n\n export const injunctionsEn = [\n    \"Don't Exist\",\n    \"Don't Be You\",\n    \"Don't Be A Child\",\n    \"Don't Grow Up\",\n    \"Don't Succeed\",\n    \"Don't Be Important\",\n    \"Don't Be Close\",\n    \"Don't Belong\",\n    \"Don't Be Well\",\n    \"Don't Be Sane\",\n    \"Don't Think\",\n    \"Don't Feel\"\n ];","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport { dataEn, injunctionsEn } from './data';\nimport { Map } from 'immutable';\n\nconst answerNumbers = [...Array(9)].map((_, i) => i + 1);\n\ninterface InjunctionResult {\n  name: string;\n  score: number;\n  type: 'operative' | 'reverse';\n}\n\ninterface Result {\n  injunctions: InjunctionResult[];\n  threshold: number;\n}\n\nfunction App() {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const answers = useRef(Map<number, number>());\n  const [result, setResult] = useState<Result>();\n\n  const questions = dataEn;\n  const injunctions = injunctionsEn;\n\n  const onAnswer = (answer: number) => {\n    answers.current = answers.current.set(currentQuestionIndex, answer);\n\n    if (currentQuestionIndex === questions.length - 1) {\n      setResult(calculateResult(answers.current, injunctions));\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  if (result !== undefined) {\n    const maxScore = Math.max(...result.injunctions.map(x => x.score));\n    return (\n      <div className=\"container mx-auto py-4 px-4\">\n        <table className=\"table-auto border-collapse\">\n          <thead>\n            <tr>\n              <th>Injunction</th>\n              <th>Type</th>\n            </tr>\n          </thead>\n          <tbody>\n            {result.injunctions.map(x =>\n              (<React.Fragment key={x.name}>\n                <tr className=\"border-top\">\n                  <td>{x.name}</td>\n                  <td className=\"px-2\">{x.type}</td>\n                </tr>\n                <tr>\n                  <td colSpan={2}>\n                    <div className=\"bar\">\n                      <div style={{ \n                        width: `${x.score / maxScore * 100}%`,\n                        backgroundColor: x.score > result.threshold ? '#6f81ff' : '#72d675'\n                         }}>{x.score }</div>\n                    </div>\n                  </td>\n                </tr>\n              </React.Fragment>))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-4 px-4\">\n      <div className=\"py-4 question\">\n        {currentQuestionIndex + 1}: {questions[currentQuestionIndex]}\n      </div>\n      <div className=\"inline-flex\">\n        {answerNumbers.map(x => <button key={x}\n          className=\"bg-gray-300 hover:bg-gray-400 py-1 px-3 no-outline\"\n          onClick={() => onAnswer(x)}>{x}</button>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction calculateResult(answers: Map<number, number>, injunctions: string[]): Result {\n  const idxs = [1, 13, 25, 37, 49];\n  const r = injunctions.map((x, i) => ({\n    name: x,\n    score: idxs.map(x => answers.get(x - 1 + i)!).reduce(sum),\n  }));\n  const { length } = r;\n  const mean = r.map(x => x.score).reduce(sum) / length;\n  const stdev = Math.sqrt(r.map(x => x.score).map(x => Math.pow(x - mean, 2)).reduce(sum) / length);\n  const threshold = mean + stdev;\n  const result: Result = {\n    threshold,\n    injunctions: r.map(({ name, score }) => ({\n      name,\n      score,\n      type: score > threshold ? 'operative' : 'reverse',\n    })),\n  };\n  return result;\n}\n\nfunction sum(a: number, b: number) {\n  return a + b;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"tailwindcss/dist/base.css\";\nimport \"tailwindcss/dist/components.css\";\nimport \"tailwindcss/dist/utilities.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}